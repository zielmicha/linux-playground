#!/bin/bash
echo -n "..."
mount -t proc proc /proc
mount -t devtmpfs dev /dev
mount -t sysfs sys /sys
mkdir -p /storage
mkdir -p /opt/playground
mount -t 9p -o trans=virtio storage /storage
mount -t 9p -o trans=virtio code /opt/playground

cp /storage/master-hostname /etc/hostname 2>/dev/null
cat > /etc/rc.local <<'EOF'
#!/bin/sh -e
# this file is generated by Playground's init_master
/postinit_master
exit 0
EOF
chmod +x /etc/rc.local
update-rc.d networking enable >/dev/null
echo "..."

rm /etc/ssh/ssh_host_*_key
if [ ! -e /storage/ssh_host_rsa_key ]; then
    echo "playground: Generating master node SSH keys..."
    dpkg-reconfigure openssh-server
    cp /etc/ssh/ssh_host_*_key /storage/
    cp /etc/ssh/ssh_host_*_key.pub /storage/
else
    cp /storage/ssh_host_*_key /etc/ssh/
    cp /storage/ssh_host_*_key.pub /etc/ssh/
fi
if [ ! -e /storage/id_node ]; then
    mkdir -p /var/playground
    useradd --create-home --home /var/playground/node node
    ssh-keygen -f /storage/id_node -N ''
    mkdir -p /var/playground/node/.ssh
    cat /storage/id_node.pub >> /var/playground/node/.ssh/authorized_keys
fi
if [ ! -e /storage/id_root ]; then
    mkdir -p /root/.ssh
    ssh-keygen -f /storage/id_root -N ''
    cat /storage/id_root.pub >> /root/.ssh/authorized_keys
fi
cat >/etc/network/interfaces <<'EOF'
# this file is generated by Playground's init_master
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet dhcp
EOF

if ! grep 'PermitTunnel yes' /etc/ssh/sshd_config; then
    echo PermitTunnel yes >> /etc/ssh/sshd_config
fi

exec /sbin/init
